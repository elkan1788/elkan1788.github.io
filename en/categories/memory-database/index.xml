<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memory database on Loving life and dreams.</title><link>https://lisenhui.cn/en/categories/memory-database/</link><description>Recent content in Memory database on Loving life and dreams.</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 19 Jan 2016 21:11:20 +0000</lastBuildDate><atom:link href="https://lisenhui.cn/en/categories/memory-database/index.xml" rel="self" type="application/rss+xml"/><item><title>MapDB synchronous read and write example</title><link>https://lisenhui.cn/en/2016/01/19/mapdb-write-read-sync.html</link><pubDate>Tue, 19 Jan 2016 21:11:20 +0000</pubDate><guid>https://lisenhui.cn/en/2016/01/19/mapdb-write-read-sync.html</guid><description>&lt;p>MapDB is a fast, easy-to-use embedded Java database engine. One of the most important features is the support of disk storage, directly in-memory Hash Map synchronous write to disk. Another particular surprise is that it supports ACED transactions, MVCC isolation, and full-time developer support&lt;/p>
&lt;p>After reading the official documentation and examples, you can basically be sure that it meets the requirements of the business scenario. It was also found that officials were refactoring the 3.x version, but it shouldn&amp;rsquo;t be released so soon. Use google to search the next use case for MapDB, not a lot. Maybe the original official documentation is complete about it, the API is not complicated, follow the official documentation to get started&lt;/p></description></item></channel></rss>