<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>优化历程 on 热爱生活与梦想</title><link>https://lisenhui.cn/categories/%E4%BC%98%E5%8C%96%E5%8E%86%E7%A8%8B/</link><description>Recent content in 优化历程 on 热爱生活与梦想</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 25 Feb 2024 10:13:53 +0800</lastBuildDate><atom:link href="https://lisenhui.cn/categories/%E4%BC%98%E5%8C%96%E5%8E%86%E7%A8%8B/rss.xml" rel="self" type="application/rss+xml"/><item><title>为友情链接添加自动检测脚本</title><link>https://lisenhui.cn/blog/add-friend-link-check-script.html</link><pubDate>Sun, 25 Feb 2024 10:13:53 +0800</pubDate><guid>https://lisenhui.cn/blog/add-friend-link-check-script.html</guid><description>&lt;p>友情链接是博客的重要组成部之一，很多博主日常也会时常进行链接的交换，即是发展自己的互联网友人圈子，也算得上是为自己的博客引流。不过在如今信息大爆炸的时代，也渐渐有些博主实在“有些乏力”来维护自己的站点，其中的缘由可能有诸多，最终便是出现我们偶尔会遇到的情况，某个站点突然之间可能就无法访问。为此便有想法给自己的站点添加个友情链接检测脚本，剔除掉那些已经失效的友情链接，让用户访问时的跳转体验更好加。&lt;/p></description></item><item><title>结合 Github Action 实现自动上传 Algolia 索引</title><link>https://lisenhui.cn/tech/automatic-upload-algolia-index-with-action.html</link><pubDate>Tue, 04 Oct 2022 16:32:53 +0800</pubDate><guid>https://lisenhui.cn/tech/automatic-upload-algolia-index-with-action.html</guid><description>&lt;p>起初本站的文章搜索功能使用是本地搜索支持，但后来发现有众多网友（包括 Hugo 官网文档搜索）都使用的是 
&lt;a href="https://www.algolia.com/" title="Algolia" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 Algolia
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 在线搜索引擎，便顺手也给自己的站点移植到该搜索引擎上面。既然提到搜索引擎自然是少了索引文件的维护，接下来就给大家分享下结合 &lt;code>Github Action&lt;/code> 实现自动化的流程。&lt;/p></description></item><item><title>Openresty+Github Action实现远程自动部署</title><link>https://lisenhui.cn/tech/use-openresty-ghaction-remote-deploy.html</link><pubDate>Sat, 17 Sep 2022 19:13:39 +0800</pubDate><guid>https://lisenhui.cn/tech/use-openresty-ghaction-remote-deploy.html</guid><description>&lt;p>近期频发的收到云厂商关于服务器资源到期的提醒，当初为了躲避云厂商所谓的注册域名 IP 检测监控，无奈之下借着“新”用户的优惠政策，采购了一款最最实惠的云服务，周期为 1 年时间，如今也已是到了“寿终正寝”的时候啦， 因此不得已又要考虑给博客空间找新的部署服务器啦。后来得到热心朋友的资助，在其现有的云服务器上开辟了小空间提供给鄙人博客访问，真是感激万分呀！&lt;/p></description></item><item><title>使用自定义域名激活Vercel部署的Waline服务</title><link>https://lisenhui.cn/blog/use-custom-domain-active-vercel-waline.html</link><pubDate>Thu, 01 Sep 2022 21:23:03 +0800</pubDate><guid>https://lisenhui.cn/blog/use-custom-domain-active-vercel-waline.html</guid><description>&lt;p>近期对于部分 Waline 评论插件的用户来说，或许是非常的困扰时期。先是服务商 LeanCloud 发布国内提供的服务，从8月份起需要绑定自有案例域名才能正常运行。而这两天 Vercel (Waline 官方提供的免费部署方案，也是大部用户的选择)旗下的 &lt;code>vercel.app&lt;/code> 域名又遭受 DNS 污染攻击，在国内无法直接访问此域名，导致众多 Waline 用户的服务直接陷入“宕机”状态，真可谓是雪上加霜。&lt;/p>
&lt;p>有句话说的好：“只要思想不滑坡，办法总比困难多”。接下来就是给大家分享下，如何通过自定义域名的方式来解决上面遇到的2个问题，此方法仅供各位网友参考参考。 &amp;#x1f604;&lt;/p></description></item><item><title>让 Nginx 将 HTTP 请求转发到 HTTPS 安全模式</title><link>https://lisenhui.cn/blog/make-nginx-support-http-ssl-request.html</link><pubDate>Mon, 30 May 2022 15:55:03 +0800</pubDate><guid>https://lisenhui.cn/blog/make-nginx-support-http-ssl-request.html</guid><description>&lt;p>在某次博主的交流讨论时，忽然间发现自己站点原定让 HTTP 转发 HTTPS 的支持功能，实际上并不没有生效。如果是直接输入域名访问的话，那么会出现 400 的错误页面。当初为了让全站支持 HTTPS 也是耗费了不少精力，没想到却是这个结果。&lt;/p></description></item><item><title>用unpkg替换jsdelivr作为本站CDN提供者</title><link>https://lisenhui.cn/blog/repleace-jsdelivr-with-unpkg-as-cdn-vender.html</link><pubDate>Fri, 20 May 2022 19:03:27 +0800</pubDate><guid>https://lisenhui.cn/blog/repleace-jsdelivr-with-unpkg-as-cdn-vender.html</guid><description>&lt;p>前几天就有看到网友在讨论 &lt;code>jsdelivr&lt;/code> 服务被墙的消息，可能是刚开始的缘故吧，当时发现自己的站点倒还算是正常的，只也没坚挺几天也面临加载 &lt;code>jsdelivr&lt;/code> 资源的失败问题。一番排查下来，发现受影响的部分还是比较小的，至少当时站点的 CSS 文件没有托管到 CDN 上，只要更换受影响部分的 CDN 链接引用便是。&lt;/p></description></item><item><title>TravisCI 远程部署站点服务</title><link>https://lisenhui.cn/tech/use-travisci-remote-deploy-site.html</link><pubDate>Tue, 22 Mar 2022 22:13:43 +0800</pubDate><guid>https://lisenhui.cn/tech/use-travisci-remote-deploy-site.html</guid><description>&lt;h2 id="背景">背景
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
&lt;/h2>&lt;p>之前一直都是将自己的博客站点托管在 &lt;code>Github Pages&lt;/code> 服务上面，但无奈国内的访问速度确实是让人堪忧，时不时还会出现打不开现象，确实影响到访问查看的体验。另外近期腾讯云的 ICP 备案又开始各种检查“臊”操作，一旦发现域名解析 IP 地址不是其云服务的话就会终止 ICP 备案，那后果可想而知肯定是域名会被终止访问引起一连串的不可预知问题（毕竟重走 ICP 审批流程也是非常的烦恼）。于是便只好订阅了腾讯云的轻服务产品，把站点静态内容托管在其上面。&lt;/p></description></item><item><title>使用Github，Travis CI自动布署Hexo博客到Coding，OSChina服务器</title><link>https://lisenhui.cn/tech/use-travis-ci-push-hexo-blog.html</link><pubDate>Sat, 19 Aug 2017 15:40:26 +0000</pubDate><guid>https://lisenhui.cn/tech/use-travis-ci-push-hexo-blog.html</guid><description>&lt;p>通常我们都是在本地用&lt;code>hexo deploy&lt;/code>发布博客文章到远程的Pages服务器，可别忘记了我们是还需要提交代码的，所以是不是觉得有点麻烦还得分开两步进行操作。这时突然想起是否可用&lt;code>Travis CI&lt;/code>工具来完成这个布署的操作呢？答案是肯定的，整体的流程大致如下：&lt;/p>
&lt;ul>
&lt;li>在本地(又或者Github网站)上编辑文章&lt;/li>
&lt;li>提交文章到Github服务器&lt;/li>
&lt;li>Travis CI收到通知，同步最新的Github代码，并执行用户自定义好的&lt;code>Travis&lt;/code>脚本生成静态博客&lt;/li>
&lt;li>最终再把生成好的博客推送到指定的Pages服务器&lt;/li>
&lt;/ul>
&lt;p>只是这其中有点比较麻烦的问题就是如何保护我们的私钥，还好&lt;code>Travis CI&lt;/code>已经为我们准备好啦，那么就开始我们的捣腾之旅吧。&lt;/p></description></item></channel></rss>