<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术锦囊 on 热爱生活与梦想</title><link>https://lisenhui.cn/categories/%E6%8A%80%E6%9C%AF%E9%94%A6%E5%9B%8A/</link><description>Recent content in 技术锦囊 on 热爱生活与梦想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 23 Oct 2022 19:16:19 +0800</lastBuildDate><atom:link href="https://lisenhui.cn/categories/%E6%8A%80%E6%9C%AF%E9%94%A6%E5%9B%8A/rss.xml" rel="self" type="application/rss+xml"/><item><title>在JS中使用强大的CSS选择器来定位页面元素</title><link>https://lisenhui.cn/use-powerful-css-selector-find-dom.html</link><pubDate>Sun, 23 Oct 2022 19:16:19 +0800</pubDate><guid>https://lisenhui.cn/use-powerful-css-selector-find-dom.html</guid><description>&lt;p>近期由于受到谷歌退出中国市场的影响，就连之前可以正常使用的翻译 API 也无法使用了。 无奈之下为不影响本站的加载速率，决定暂时关闭谷歌的在线翻译功能。🙃&lt;/p>
&lt;p>接着就发生了奇怪的现象，重新生成站代码发布完成后，自测是没有问题的，但是有网友反馈说站点访问加载不出来内容。听完自己也甚是一惊，难道是服务器出问题啦？&lt;/p></description></item><item><title>实现用户自定义主题深浅模式浏览站点</title><link>https://lisenhui.cn/tech/implement-custom-switch-theme-color.html</link><pubDate>Thu, 29 Sep 2022 21:35:25 +0800</pubDate><guid>https://lisenhui.cn/tech/implement-custom-switch-theme-color.html</guid><description>&lt;p>如今大部的网站都实现了深浅主题2种不同模式的配色，比如说程序员大多喜欢深色模式，或许是需要长时间使用电脑，该模式能够一定程度上保护视力。从表面现象上来看，实现这一功能需要 &lt;code>CSS&lt;/code> 和 &lt;code>JavaScript&lt;/code> 两者搭配着一起使用，但当深入以后发现有些没料想的事情，且听我慢慢叙说。&lt;/p></description></item><item><title>Github Action执行时遇到SSH key invalid format错误</title><link>https://lisenhui.cn/tech/github-action-ssh-key-invalid.html</link><pubDate>Thu, 11 Aug 2022 21:21:59 +0800</pubDate><guid>https://lisenhui.cn/tech/github-action-ssh-key-invalid.html</guid><description>&lt;p>&lt;code>Github Action&lt;/code>是款非常不错的&lt;code>CI/CD&lt;/code>工具，自从它问世以来发展的速度真可谓是快，在 &lt;code>Github&lt;/code> 的官方市场中几乎能找到所有你想要使用的&lt;code>Action&lt;/code>脚本进行引用。本博客也是基于&lt;code>Github Action&lt;/code>进行远程部署的，与常规的&lt;code>Github Pages&lt;/code>服务不同，本站的静态文件是部署在国内某云厂商的静态服务器上面的，通过
&lt;a href="https://github.com/tzzs/server-shell" title="tzzs/server-shell" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
tzzs/server-shell
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> Action 集成，实现远程执行服务端的命令，来拉取最新生成的静态文件。&lt;/p></description></item><item><title>创建属于你自己的org永久域名</title><link>https://lisenhui.cn/tech/create-your-forever-org-domain.html</link><pubDate>Sat, 18 Jun 2022 20:39:58 +0800</pubDate><guid>https://lisenhui.cn/tech/create-your-forever-org-domain.html</guid><description>&lt;p>或许你也曾想拥有一个属于自己的域名，但又苦于囊中羞涩无力购买，亦或是在国内域名生效前都要实名备案。那么今天就给你带来一个好消息，你可以申请注册一个属于自己的 org 域名，而且不需要花费任何的费用，也不用进行备案就能使用（仅限国外服务器），就问你心动了有没有 😆&lt;/p>
&lt;div class="note info ">
注意： 这里注册的并不是一级域名，而是属于二级域名，要是介意不用往下细看了。
&lt;/div></description></item><item><title>VirtualBox6.x版本CPU时钟Bug导致虚拟机无法开机</title><link>https://lisenhui.cn/tech/virtualbox6-cup-clock-not-started.html</link><pubDate>Thu, 21 Apr 2022 18:39:47 +0800</pubDate><guid>https://lisenhui.cn/tech/virtualbox6-cup-clock-not-started.html</guid><description>&lt;p>下午在启动平时常用的虚拟环境时，发现进度条卡在中间老半天都不会动，情况不太正常，以前启动时间最多也就是 10 几分钟就能看到桌面。点击键盘的方向键看打印的日志，一直在重复如下图所示的 Bug 信息，即使后面等待了半个多小时进入系统后，这个日志信息也不断的在终端界面上输出。&lt;/p></description></item><item><title>使用Mobaxterm登录本地虚拟机很慢</title><link>https://lisenhui.cn/tech/sshlogin-localvm-slowly-mobaxterm.html</link><pubDate>Mon, 04 Apr 2022 11:53:34 +0800</pubDate><guid>https://lisenhui.cn/tech/sshlogin-localvm-slowly-mobaxterm.html</guid><description>&lt;p>近期因本地虚拟机有问题但重新搭建了个新环境，结果在使用 MobaXterm 工具登录终端时发现每次都要等待个 4 ~ 5 秒才可以进入，操作检验不是很好，不明白为何本地环境连接会是这么的慢，所以还是得想办法分析下。&lt;/p>
&lt;p>看有些网友也有类似的困惑，提示说可能是 SSH 登录时要通过 DNS 来寻址的原因。参考文章上说法找到 &lt;code>/etc/ssh/sshd_config&lt;/code> 把里面的 &lt;code>UseDNS&lt;/code> 配置项设置为 &lt;code>no&lt;/code>，但是发现其已经是关闭的状态。那会是什么原因引起呢？&lt;/p></description></item><item><title>Sublime Text安装插件失败</title><link>https://lisenhui.cn/tech/use-sublime-txt-build-hugo-site.html</link><pubDate>Tue, 08 Feb 2022 12:31:13 +0800</pubDate><guid>https://lisenhui.cn/tech/use-sublime-txt-build-hugo-site.html</guid><description>&lt;p>近期因公司之前分配的电脑出了点毛病，无奈只能重新换个新电脑，所以环境也得从头进行搭建。而一直使用的 &lt;code>Sublime Text&lt;/code> 是绿色版本，直接拷贝过来后启动，编辑等操作都是正常的，但在尝试安装新的插件时就遇了如下的问题。&lt;/p></description></item><item><title>替换SpringBoot里的文件</title><link>https://lisenhui.cn/tech/replace-files-in-springboot.html</link><pubDate>Wed, 14 Apr 2021 17:43:20 +0800</pubDate><guid>https://lisenhui.cn/tech/replace-files-in-springboot.html</guid><description>&lt;p>现在使用&lt;code>Spring Boot&lt;/code>架构的应用开发来说是非常的普遍，统一化的打包部署确实带来不少便利，但当遇到问题时也是会比较棘手。或许你会觉得很惊讶，但如果说这是产品部署运维过程中遇到的难题需要修改&lt;code>Spring Boot&lt;/code>应用程序，你就会觉得困难也是不奇怪的。本文就来分享下如何使用&lt;code>jar&lt;/code>命令应对线上部署产品时，要临时替换&lt;code>Spring Boot&lt;/code>应用中的Jar包的操作。&lt;/p></description></item><item><title>加入Istio官方翻译组织的历程记录</title><link>https://lisenhui.cn/tech/join-istio-translation-org.html</link><pubDate>Sat, 20 Mar 2021 11:48:53 +0800</pubDate><guid>https://lisenhui.cn/tech/join-istio-translation-org.html</guid><description>&lt;p>作为曾经的程序猿，自己也一直“享受”着来自开源社区的那些无私分享。这些开源项目对自己的影响和启发还是很大的，之前就有想过如何去回馈开源社区，也开贡献过自己的一些项目，参与过一些开源项目，但都还是仅限国内的项目。不久前正好看到 Jimmy Song 在微信朋友圈发布
&lt;a href="https://mp.weixin.qq.com/s/fPvCU8Dj4c60QMmy_s9rmA" title="《&amp;lt;strong&amp;gt;Istio 官网翻译工作组成立暨志愿者招募&amp;lt;/strong&amp;gt;》" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
《&lt;strong>Istio 官网翻译工作组成立暨志愿者招募&lt;/strong>》
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>的动态，没有任何的犹豫，下班后便联系 Jimmy 申请加入翻译工作，并在随后的时间完成自己的首次翻译，也成功被合并到了 Istio 官方仓库的主分支当中。如果你也有和我一样的想法，那么欢迎您也来一起加入，期待。&lt;/p></description></item><item><title>使用Github Action自动同步仓库到Gitee</title><link>https://lisenhui.cn/tech/add-sync-gitee-action.html</link><pubDate>Thu, 25 Feb 2021 12:52:25 +0800</pubDate><guid>https://lisenhui.cn/tech/add-sync-gitee-action.html</guid><description>&lt;h2 id="背景">背景
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
&lt;/h2>&lt;p>作为程序员出生的你，肯定知道备份的重要性。再说现在大环境背景下，美国的政治关系还是比较混乱的，而对于存放在Github上面的项目，也不再是技术自由的国度啦。所以说我们的代码还是有必要进行“双”备份的，接下来就是介绍下，如何使用Github上面的Action功能，将Github上面的代码同步备份到国内的Gitee仓库站点。&lt;/p></description></item><item><title>GitExtensions推送Github失败记录</title><link>https://lisenhui.cn/tech/git-extensions-push-fail.html</link><pubDate>Mon, 22 Feb 2021 15:42:39 +0800</pubDate><guid>https://lisenhui.cn/tech/git-extensions-push-fail.html</guid><description>&lt;h2 id="问题现身">问题现身
&lt;a class="header-anchor" href="#%e9%97%ae%e9%a2%98%e7%8e%b0%e8%ba%ab">&lt;/a>
&lt;/h2>&lt;p>555~，今天体验了一把安装最新程序的“快感”！！！&lt;/p>
&lt;p>在使用Git Extensisons推送最新写的文章到Github时，遇到了个SSH KEY认证无效的莫名错误。事情的发生是这样的：今天在首次打开Git Extensions软件时，它非常友好的弹出更新提示窗口，然后就手不自觉的点击了下确认按钮。结果更新好后，在推送文章到Github时就发生了如下面一样神奇的错误阻拦：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FATAL ERROR&lt;span style="color:#f92672">:&lt;/span> No supported authentication methods &lt;span style="color:#a6e22e">available&lt;/span> &lt;span style="color:#f92672">(&lt;/span>server sent&lt;span style="color:#f92672">:&lt;/span> publickey&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fatal: Could not read from remote repository&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please make sure you have the correct access rights
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>and the repository exists&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Github个人信息卡片</title><link>https://lisenhui.cn/tech/github-personal-profile-card.html</link><pubDate>Sun, 24 Jan 2021 12:21:10 +0800</pubDate><guid>https://lisenhui.cn/tech/github-personal-profile-card.html</guid><description>&lt;p>Github上总是会有一些新奇的东西出现，这不无意间又发现了个有趣的玩法，可以用它来作为你的个人开发者名信片展现。具体展现效果如下：&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2021/01-24-elkan1788-profile-02.png" alt="01-24-elkan1788-profile-02.png" />&lt;/p>
&lt;p>操作起来也不繁琐，类似以前的pages服务那样，只准备个特定的仓库就可以，具体操作如下：&lt;/p></description></item><item><title>安装CDH6过程中几个入坑记录</title><link>https://lisenhui.cn/tech/install-cdh-issues-notes.html</link><pubDate>Mon, 28 Sep 2020 17:02:33 +0000</pubDate><guid>https://lisenhui.cn/tech/install-cdh-issues-notes.html</guid><description>&lt;p>其实CDH环境部署安装并非是什么难事，正所谓是熟能生巧嘛。但正好不巧的就是太久没有操作过，便是会遇到一些“奇奇怪怪”的问题，而后花费些功夫才能解决好，事后也就顺道把它们记录下来，避免以后再犯。&lt;/p></description></item><item><title>在Linux上安装中文字体</title><link>https://lisenhui.cn/tech/install-linux-chinese-fonts.html</link><pubDate>Mon, 21 Oct 2019 19:04:51 +0000</pubDate><guid>https://lisenhui.cn/tech/install-linux-chinese-fonts.html</guid><description>&lt;h2 id="背景">背景
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
&lt;/h2>&lt;p>平时一般都很少在Linux服务机器上使用UI桌面，但也还是有机会遇到，这不今天便遇到Linux版本的火狐浏览器显示中文乱码。无论怎么调试浏览器的相关设置，都没有办法凑效，甚是有点郁闷。&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2019/10-31-firefox-browser-err01.png" alt="firefox-browser-err01.png" />
&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2019/10-31-firefox-browser-err02.png" alt="firefox-browser-err02.png" />&lt;/p></description></item><item><title>不能在HDFS Data节点上创建临时文件</title><link>https://lisenhui.cn/tech/unable-create-tmp-file-in-hdfs-nodes.html</link><pubDate>Thu, 21 Mar 2019 19:04:51 +0000</pubDate><guid>https://lisenhui.cn/tech/unable-create-tmp-file-in-hdfs-nodes.html</guid><description>&lt;p>在新创建的&lt;code>Hadoop&lt;/code>边缘节点上，尝试通过&lt;code>Hive CLI&lt;/code>模式进行数据插入操作，结果没有出现意想中的成功信息，反倒是捕获到如下的异常：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>FAILED: SemanticException &lt;span style="color:#f92672">[&lt;/span>Error &lt;span style="color:#ae81ff">10293&lt;/span>&lt;span style="color:#f92672">]:&lt;/span> Unable to create temp file &lt;span style="color:#66d9ef">for&lt;/span> insert values File &lt;span style="color:#f92672">/&lt;/span>tmp&lt;span style="color:#f92672">/&lt;/span>hive&lt;span style="color:#f92672">/&lt;/span>kylin&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>c84de0a&lt;span style="color:#f92672">-&lt;/span>fca2&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>d3c&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>f72&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">47436&lt;/span>a4adb83&lt;span style="color:#f92672">/&lt;/span>_tmp_space&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">db&lt;/span>&lt;span style="color:#f92672">/&lt;/span>Values__Tmp__Table__1&lt;span style="color:#f92672">/&lt;/span>data_file could only be replicated to &lt;span style="color:#ae81ff">0&lt;/span> nodes instead of &lt;span style="color:#a6e22e">minReplication&lt;/span> &lt;span style="color:#f92672">(=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">).&lt;/span> There are &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#a6e22e">datanode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> running and &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#a6e22e">node&lt;/span>&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> are excluded in &lt;span style="color:#66d9ef">this&lt;/span> operation&lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">server&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">blockmanagement&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">BlockManager&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">chooseTarget4NewBlock&lt;/span>&lt;span style="color:#f92672">(&lt;/span>BlockManager&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">1720&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">server&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">namenode&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">FSNamesystem&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getAdditionalBlock&lt;/span>&lt;span style="color:#f92672">(&lt;/span>FSNamesystem&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">3440&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">server&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">namenode&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NameNodeRpcServer&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">addBlock&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NameNodeRpcServer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">686&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">server&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">namenode&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">AuthorizationProviderProxyClientProtocol&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">addBlock&lt;/span>&lt;span style="color:#f92672">(&lt;/span>AuthorizationProviderProxyClientProtocol&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">217&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">protocolPB&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ClientNamenodeProtocolServerSideTranslatorPB&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">addBlock&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ClientNamenodeProtocolServerSideTranslatorPB&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">506&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hdfs&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">protocol&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">proto&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">callBlockingMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ClientNamenodeProtocolProtos&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ipc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ProtobufRpcEngine$Server$ProtoBufRpcInvoker&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">call&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ProtobufRpcEngine&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">617&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ipc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">RPC$Server&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">call&lt;/span>&lt;span style="color:#f92672">(&lt;/span>RPC&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">1073&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ipc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Server$Handler$1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Server&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">2226&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ipc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Server$Handler$1&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Server&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">2222&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">security&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">AccessController&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">doPrivileged&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Native Method&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at javax&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">security&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">auth&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Subject&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">doAs&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Subject&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">415&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">security&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">UserGroupInformation&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">doAs&lt;/span>&lt;span style="color:#f92672">(&lt;/span>UserGroupInformation&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">1917&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">apache&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hadoop&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ipc&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Server$Handler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Server&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">2220&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR: Current user has no permission to create Hive table in working directory&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">/&lt;/span>user&lt;span style="color:#f92672">/&lt;/span>kylin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Win10常用的快捷操作方式</title><link>https://lisenhui.cn/tech/win10-quick-operations.html</link><pubDate>Wed, 08 Aug 2018 12:54:53 +0000</pubDate><guid>https://lisenhui.cn/tech/win10-quick-operations.html</guid><description>&lt;p>常言道“工欲善其事，必先利其器。”&lt;/p>
&lt;p>不过从&lt;code>Mac&lt;/code>再过渡回来到&lt;code>Windows&lt;/code>确实是有诸多的不习惯，但仍是要学会克服，无它，工作是生存的根本技能。于是从网络上扒了下关于&lt;code>Win10&lt;/code>快捷键的分布，还是挺有趣的。记录也下部分常用快捷键，如下：&lt;/p></description></item><item><title>Axure教程：动态面板内容超出界线显示</title><link>https://lisenhui.cn/tech/axure-lightbox-shade.html</link><pubDate>Mon, 12 Mar 2018 10:11:53 +0000</pubDate><guid>https://lisenhui.cn/tech/axure-lightbox-shade.html</guid><description>&lt;h1 id="问题">问题
&lt;a class="header-anchor" href="#%e9%97%ae%e9%a2%98">&lt;/a>
&lt;/h1>&lt;p>随着用户需求的不断更新，产品原型的设计也在不断迭代升级，那么是必会让整体的设计复杂增加，各中组件相互影响的因素就更多。这不现在就遇到在动态面板上显示一个隐藏的元件时，结果下拉的组件显示不完全了，真的好是郁闷，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2018/03-12-axure-state-auto-display01.png" alt="axure-state-auto-display01.png" />&lt;/p></description></item><item><title>Axure教程：实现表格数据展示</title><link>https://lisenhui.cn/tech/axure-datalist-table.html</link><pubDate>Fri, 29 Dec 2017 18:45:03 +0000</pubDate><guid>https://lisenhui.cn/tech/axure-datalist-table.html</guid><description>&lt;p>通常在系统管理后台中，使用列表（表格）形式展示数据是最为常见的方式。而在使用Axure设计产品原型时想实现这个数据列表却不太容易，或许常见的做法就是使用矩形拼凑起来，还有就是直接使用表格控件来布局。但是这都不太方便，首先就是布局麻烦，其次就是数据修改比较麻烦。接下来给大家介绍下如何使用表格+中继器控件实现数据列表。&lt;/p></description></item><item><title>Axure教程：实现动态的遮罩层</title><link>https://lisenhui.cn/tech/axure-lightbox-shade.html</link><pubDate>Fri, 15 Dec 2017 20:22:43 +0000</pubDate><guid>https://lisenhui.cn/tech/axure-lightbox-shade.html</guid><description>&lt;p>今天在做产品原型设计时，遇到了个关于动态显现遮罩层的难点。&amp;ldquo;无奈&amp;quot;为追求高保真的效果，还是花了点心思做个原型实现。待做好回过头来看看的话，其实这个效果的难度也不大，只是看个人意愿是否想做而已。Axure本身就提供了模板的功能，也就是说只要实现一次但可以一劳永逸。下面就一起来看看这个遮罩层实现过程和效果吧。&lt;/p></description></item><item><title>Apache Nifi在Windows环境下搭建伪群集及证书登录</title><link>https://lisenhui.cn/tech/nifi-windows-local-cluster.html</link><pubDate>Thu, 26 Oct 2017 17:50:52 +0000</pubDate><guid>https://lisenhui.cn/tech/nifi-windows-local-cluster.html</guid><description>&lt;p>前些时间做了关于&lt;code>Apache Nifi&lt;/code>分布式集群的搭建分享，但很多时候要搭建分布式集群机器资源是个问题，而现在的单机的配置还是相当不错的，故现在就做个关于Windows上搭建个伪分布式集群的分享，同时通过另外一种方式实现&lt;strong>Apache Nifi&lt;/strong>的授权认证。&lt;/p>
&lt;h1 id="系统环境及软件版本">系统环境及软件版本
&lt;a class="header-anchor" href="#%e7%b3%bb%e7%bb%9f%e7%8e%af%e5%a2%83%e5%8f%8a%e8%bd%af%e4%bb%b6%e7%89%88%e6%9c%ac">&lt;/a>
&lt;/h1>&lt;ul>
&lt;li>
&lt;p>Windows8.1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JDK1.8.0_131&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nifi-1.4.0&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Nifi安装目录&lt;/th>
&lt;th style="text-align:center">WEB端口&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">xxx\nifi-ncm&lt;/td>
&lt;td style="text-align:center">9443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">xxx\nifi-cluster01&lt;/td>
&lt;td style="text-align:center">9444&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">xxx\nifi-cluster02&lt;/td>
&lt;td style="text-align:center">9445&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>(其它版本可参考此篇文章)
另在测试中发个问题，使用&lt;code>Apache Nifi&lt;/code>内嵌的&lt;code>Zookeeper&lt;/code>搭建伪集群里启动总是提示端口占用的问题，故放弃只采用了单结点启动。&lt;/p>
&lt;/blockquote></description></item><item><title>Apache Nifi集群搭建及用kerberos实现用户认证</title><link>https://lisenhui.cn/tech/ninfi-cluster-deploy-with-kerberos.html</link><pubDate>Sun, 22 Oct 2017 11:42:29 +0000</pubDate><guid>https://lisenhui.cn/tech/ninfi-cluster-deploy-with-kerberos.html</guid><description>&lt;p>最近这段时间在接触数据流式处理方面的事宜，用到了&lt;strong>Apache NIFI&lt;/strong>现把安装配置中学习的一些经验分享下。此篇文章主要是针对集群及用户权限方面，关于
&lt;a href="https://nifi.apache.org/" title="Apache NIFI" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Apache NIFI
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>的介绍就不做过多的说明，直接引用官方的首页的说明如下图所示：&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2017/10-22-Apache-NiFi-01.png" alt="NiFi-01.png" />&lt;/p></description></item><item><title>关于Ambari中服务运行正常UI却显示服务停止的问题</title><link>https://lisenhui.cn/tech/ambari-monitor-status-issues.html</link><pubDate>Wed, 18 Oct 2017 16:13:36 +0000</pubDate><guid>https://lisenhui.cn/tech/ambari-monitor-status-issues.html</guid><description>&lt;p>很多时候环境的维护的确是件头痛的事件，这不本来在Ambari的Dashboard页面显示正常服务的监控，实然间出现了个奇怪的现象： 在机器查询服务的运行进程是正常的，可偏偏Ambari的UI界面却显示状为停止，但端口检查又显示正常的。如下图：&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2017/10-18-ambari-red.png" alt="alert_stopped.png" />&lt;/p></description></item><item><title>HiveServer2因JDBC版本引起的问题</title><link>https://lisenhui.cn/tech/hive2-jdbc-connector-issues.html</link><pubDate>Tue, 17 Oct 2017 17:33:04 +0000</pubDate><guid>https://lisenhui.cn/tech/hive2-jdbc-connector-issues.html</guid><description>&lt;p>之前一直都是用&lt;code>HDP&lt;/code>来搭建和管理&lt;strong>Hadoop&lt;/strong>环境，在安装完成调试时也未曾出现过棘手的问题，但这次在&lt;code>Centos6x&lt;/code>系统上布署好后却是遇到奇怪的问题：&lt;/p>
&lt;blockquote>
&lt;p>表面上看来&lt;strong>Hive&lt;/strong>服务是正常运行的，进程运行正常，页面UI也正常，日志也没错误输出。简单的建表的语句都能执行，可偏偏在导入本地/&lt;strong>HDFS&lt;/strong>数据时，便就抛出异常啦。错误的堆栈信息如下：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version &lt;span style="color:#66d9ef">for&lt;/span> the right syntax to use near &lt;span style="color:#e6db74">&amp;#39;OPTION SQL_SELECT_LIMIT=DEFAULT&amp;#39;&lt;/span> at line &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>另外一个问题在使用&lt;strong>Ambari&lt;/strong>提供的&lt;code>HiveView&lt;/code> UI进行HDFS数据导入提示文件不存在，错误信息如下：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>org.apache.hive.service.cli.HiveSQLException: Error &lt;span style="color:#66d9ef">while&lt;/span> compiling statement: FAILED: SemanticException Line 1:17 Invalid path &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>/tmp/xxx/xxxxx.csv&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>: No files matching path hdfs:/...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Azkaban所支持的Job类型及示例</title><link>https://lisenhui.cn/tech/azkaban-execute-jobs.html</link><pubDate>Sat, 09 Sep 2017 18:45:42 +0000</pubDate><guid>https://lisenhui.cn/tech/azkaban-execute-jobs.html</guid><description>&lt;p>在官方文档的介绍中，了解到&lt;code>Azkaban&lt;/code>所支持的工作类型还是很丰富的，如：&lt;code>Command&lt;/code>，&lt;code>HadoopShell&lt;/code>，&lt;code>Python&lt;/code>，&lt;code>Java&lt;/code>，&lt;code>Hive&lt;/code>，&lt;code>Pig&lt;/code>等等。不过在此我们主要具体只来讲解下&lt;code>Python&lt;/code>与&lt;code>Java&lt;/code>的工作类型任务，其它工作类型的话，比如&lt;code>Commnad&lt;/code>，&lt;code>Hive&lt;/code>，&lt;code>HadoopShell&lt;/code>相对比较简单就不做详解，有需要的话可以自行实践一下。&lt;/p>
&lt;p>不管提交哪一种任务，&lt;code>Azkaban&lt;/code>默认都是通过上传压缩包来管理，那么在此建议大家养成一个习惯，不要所执行的文件(代码)打包到&lt;code>Azkaban&lt;/code>的工程包里面。这样带来的好处是显而易见的，比如：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>工程创建的速度快，不需要上传执行部分文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免了修改&lt;code>MySQL&lt;/code>中的&lt;code>max_allow_packet&lt;/code>参数以解决工程文件上传失败的问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在分布式布署环境中，当执行Task免去了在不同节点中拷贝工程包的麻烦&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>定时调度任务器Azkaban安装</title><link>https://lisenhui.cn/tech/azkaban-install-use-share.html</link><pubDate>Fri, 08 Sep 2017 14:29:42 +0000</pubDate><guid>https://lisenhui.cn/tech/azkaban-install-use-share.html</guid><description>&lt;h1 id="背景与介绍">背景与介绍
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af%e4%b8%8e%e4%bb%8b%e7%bb%8d">&lt;/a>
&lt;/h1>&lt;p>在大数据繁杂的ETL或其它数据处理过程当中，有些任务是需要定时执行的，虽然Linux自带了&lt;code>cron&lt;/code>命令功能，但是仍不能满足最大的一点就是它不能提供集中式的管理和可视化的编辑。其实在大数据的生态当中已集成有个定时调度框架&lt;code>Oozie&lt;/code>，只是实践下来发现其学习成本不低，布署的过程也较复杂。在尝试过其它分布工调度框架后（如阿里的宙斯&lt;code>Zeus&lt;/code>），还是选择了社区较多人使用的&lt;code>Azkaban&lt;/code>。&lt;/p>
&lt;p>&lt;code>Azkaban3&lt;/code>相对于上个版本所做的更改还是比较大的，感兴趣的话可以到其官方网站
&lt;a href="https://azkaban.github.io/azkaban/docs/latest/" title="Azkaban" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Azkaban
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>了解下。接下来主要还是分享下&lt;code>Azkaban3&lt;/code>的安装布署，下面是&lt;code>Azkaban3&lt;/code>的系统架构设计图：&lt;/p>
&lt;p>&lt;img src="https://lisenhui.cn/imgs/img-lazy-loading.gif" data-src="//imgs.lisenhui.cn/blog/2017/09-08-Azkaban-Install00.png" alt="Azkaban-Install00" />&lt;/p>
&lt;p>图中的3个组件便是&lt;code>Azkaban3&lt;/code>的重要组成部分：&lt;/p>
&lt;ul>
&lt;li>MySQL关系数据存储数据&lt;/li>
&lt;li>Web Server GUI管理服务提供者&lt;/li>
&lt;li>Executor Server 分布式节点服务布署&lt;/li>
&lt;/ul></description></item><item><title>pymssql连接azure云的MSSQL数据库</title><link>https://lisenhui.cn/tech/pymssql-azure-mssql-datasource-connect.html</link><pubDate>Thu, 17 Aug 2017 18:20:18 +0000</pubDate><guid>https://lisenhui.cn/tech/pymssql-azure-mssql-datasource-connect.html</guid><description>&lt;p>码好代码在测试环境做好测试后，满怀信心的去布署上线到生产环境，结果就是一堆的异常，具体查看了后发现是连接数据库的问题，异常信息如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>40532, &lt;span style="color:#e6db74">&amp;#39;Cannot open server &amp;#34;1433D&amp;#34; requested by the login.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">The login failed.DB-Lib error message 20018, severity 20:\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">General SQL Server error: Check messages from the SQL Server\n
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">DB-Lib error message 20002, severity 9:\nAdaptive Server connection failed\n&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>在Mac/Linux系统下安装pymssql模块</title><link>https://lisenhui.cn/tech/mac-install-pymssql-module.html</link><pubDate>Wed, 16 Aug 2017 13:50:55 +0000</pubDate><guid>https://lisenhui.cn/tech/mac-install-pymssql-module.html</guid><description>&lt;p>在非&lt;code>Windows&lt;/code>环境下去访问，连接 MSSQL 数据，本身就是件苦差事来的。自写&lt;code>Python&lt;/code>程序以来在&lt;code>ORM&lt;/code>方面都是使用&lt;code>pyxxx&lt;/code>的模块，果不其然连接 MSSQL 也有个模块叫&lt;code>pymssql&lt;/code>，只是实际使用中并不是特别的顺利。如笔者所处的环境就是如此，开发环境为&lt;code>OSX 10.11&lt;/code>，发布环境为&lt;code>CentOS 6.4&lt;/code>，按官方的安装步骤实行下来，Linux 环境是&lt;code>OK&lt;/code>的，只是 Mac 环境下安装失败，错误的堆栈信息如下：&lt;/p></description></item><item><title>Hue中集成MySQL数据显示乱码</title><link>https://lisenhui.cn/tech/hue-rdbms-mysql-chinese.html</link><pubDate>Tue, 15 Aug 2017 15:13:39 +0000</pubDate><guid>https://lisenhui.cn/tech/hue-rdbms-mysql-chinese.html</guid><description>&lt;p>Hue is a Web applications that enables you to easily interact with an Hadoop cluster. Hue applications let you browse HDFS, Jobs, run Hive, Pig and Cloudera Impala queries, manage the Hive Metastore, HBase, Sqoop, ZooKeeper, MapReduce jobs, and create and schedule worklows with Oozie.&lt;/p>
&lt;p>更加关于HUE的介绍及演示可访问其官方网站：
&lt;a href="http://gethue.com" title="http://gethue.com" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
http://gethue.com
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p></description></item><item><title>Python在命令行即时输出</title><link>https://lisenhui.cn/tech/python-output-conosle-intime.html</link><pubDate>Sun, 13 Aug 2017 14:19:14 +0000</pubDate><guid>https://lisenhui.cn/tech/python-output-conosle-intime.html</guid><description>&lt;p>在程序遇到问题需要DEBUG时，通过会增加一些**&lt;code>print&lt;/code>**语句输出。于是乎按惯例也在&lt;code>Python&lt;/code>的代码中加入print调试，然后输入&lt;code>python xxxx.py&lt;/code>，满怀信心的期待着调试信息的满屏滚动，结果是过了好阵子才显示出来。为何会这样呢？&lt;/p>
&lt;p>根据网友建议增加个&lt;code>-u&lt;/code>参数就OK，后来查了下原因：&lt;code>Python&lt;/code>在默认情况会先把&lt;code>print&lt;/code>输出到缓冲中，待缓冲满或程序后才会输出。所以可以在运行&lt;code>Python&lt;/code>程序时加入此参数是非常的有用。&lt;/p></description></item><item><title>Python pip中国镜像服务器地址</title><link>https://lisenhui.cn/tech/python-pip-install-chinese-mirror.html</link><pubDate>Fri, 11 Aug 2017 14:17:01 +0000</pubDate><guid>https://lisenhui.cn/tech/python-pip-install-chinese-mirror.html</guid><description>&lt;p>今天在安装一个&lt;code>Python&lt;/code>模块&amp;ndash;&amp;gt;&lt;code>pymysql&lt;/code>结果等待时间特别的长，最后超时失败啦，起初是以为是网络带宽问题，让IT调整后仍是失败，随后尝试查找国内的镜像，还有真人也遇到过相同的问题。镜像列表如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>https://pypi.douban.com/simple/ 豆瓣
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://mirrors.aliyun.com/pypi/simple/ 阿里
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://pypi.hustunique.com/simple/ 华中理工大学
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://pypi.sdutlinux.org/simple/ 山东理工大学
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://pypi.mirrors.ustc.edu.cn/simple/ 中国科学技术大学
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://pypi.tuna.tsinghua.edu.cn/simple 清华
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>APIDoc自动生成接口文档</title><link>https://lisenhui.cn/tech/nodejs-apidoc-generator.html</link><pubDate>Tue, 18 Jul 2017 15:23:43 +0000</pubDate><guid>https://lisenhui.cn/tech/nodejs-apidoc-generator.html</guid><description>&lt;p>对于项目开发常见的前后端分离模式来说，中间在后端完成接口开发交付对接时，前端人员往往苦于没有接口文档会经常&amp;quot;跑去&amp;quot;骚扰后端人员，真是苦不堪言哪。要是此时有个文档化的说明那就轻松多啦，现在后端流行的文档生成利器有&lt;code>Swagger&lt;/code>，它虽然方便，但是也有弊端得写在的后台的代码中，而且启动整个后台项目才能访问。或许有时还真不太方便的，另外就是项目初期要对接口做个规划也无法用这个方法，难道就没有别的办法了嘛？&lt;/p></description></item><item><title>Kylin集成Zeppelin展示数据</title><link>https://lisenhui.cn/tech/kylin-integrate-with-zeppelin.html</link><pubDate>Fri, 02 Jun 2017 18:03:23 +0000</pubDate><guid>https://lisenhui.cn/tech/kylin-integrate-with-zeppelin.html</guid><description>&lt;p>实际上kylin自带的WEB UI已经集成了建议的图形报表，有常见的线形，柱形及饼图，用于数据的初步展示是完全够用的。如果要更加丰富的展示，那可以考虑使用别的工具，现在就试试官方推荐的Apache Zeppelin。&lt;/p></description></item><item><title>Sqoop工具导入数据到Hive小记</title><link>https://lisenhui.cn/tech/sqoop-import-data-to-hive.html</link><pubDate>Wed, 24 May 2017 20:18:53 +0000</pubDate><guid>https://lisenhui.cn/tech/sqoop-import-data-to-hive.html</guid><description>&lt;p>最近正在捣鼓构建数据仓库的事宜，正好有部分维度表的数据需要来自于RDBMS的数据，在HADOOP环境最流行的莫过于Apache的Sqoop工具，按官方的文档操作下来也很顺畅的，不过当要应用到业务场景上时问题便出现了。&lt;/p></description></item><item><title>Supervisor介绍与使用</title><link>https://lisenhui.cn/tech/linux-daemon-supervisor.html</link><pubDate>Thu, 18 May 2017 07:10:23 +0000</pubDate><guid>https://lisenhui.cn/tech/linux-daemon-supervisor.html</guid><description>&lt;p>很多时候我们自己开发的或别的服务都没有后台的守护进程，那么进程很容易就会被不小心的杀死，此时就需要有个程序去监控和维护这些程序服务。网上搜罗了一番后发现&lt;code>Supervisor&lt;/code>组件正好能实现我们想要的，同时还支持对这些程序的统一管理，Nice!&lt;/p></description></item><item><title>发布jar到Maven时遭遇gpg签名失败</title><link>https://lisenhui.cn/tech/maven-deploy-center-sign-failed.html</link><pubDate>Wed, 17 May 2017 17:02:23 +0000</pubDate><guid>https://lisenhui.cn/tech/maven-deploy-center-sign-failed.html</guid><description>&lt;p>有许久没维护自己开源的项目了，此次在修复BUG发布时遭遇失败，检查后发现原因是因为gpg签名失败，没办法换了MAC电脑有些操作不熟悉是有点郁闷的。&lt;/p>
&lt;p>关于如何将自己的JAR共享到Maven中央仓库，网上有很多的资源，大家可以自行尝试一下，其实也不难的，完全没必要担心英语的问题。&lt;/p>
&lt;blockquote>
&lt;p>分享一个别人整理的GitBook:
&lt;a href="https://skyao.gitbooks.io/leaning-maven/content/publish/central/" title="发布到中央仓库" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
发布到中央仓库
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Github push失败：Could not resolve hostname</title><link>https://lisenhui.cn/tech/github-push-failed.html</link><pubDate>Tue, 16 May 2017 10:21:43 +0000</pubDate><guid>https://lisenhui.cn/tech/github-push-failed.html</guid><description>&lt;p>平时最常用的git push命令突然间居然不可以用（错误日志如下），脑子首先蹦出的想法就是：难道Github又被墙了么！以前出现过类似这样的现象，需要通过指定hosts来加速访问。&lt;/p>
&lt;p>git push 执行后返回的错误日志：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh: Could not resolve hostname github.com:elkan1788: nodename nor servname provided, or not known
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fatal: Could not read from remote repository.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please make sure you have the correct access rights
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Zookeeper崩溃后无法加载事务日志</title><link>https://lisenhui.cn/tech/zookeeper-unload-data-exception.html</link><pubDate>Mon, 15 May 2017 12:34:21 +0000</pubDate><guid>https://lisenhui.cn/tech/zookeeper-unload-data-exception.html</guid><description>&lt;p>今天在生产的HDP环境中，遇到一件非常诡异的事情。明明搭建了2台zookeeper集群，却是莫明其妙的不见了，而且HDP服务还不报错，认真的检查过环境还是没有找到异常的信息，真是说不明白了。&lt;/p>
&lt;p>言归正传， 还是说说后面遇的问题吧： 生产环境zookeeper崩溃，查看日志发现是磁盘空间已经写满。起初以为是很简单的操作，删除无用的日志文件释放磁盘空间（这是不得不吐槽下HDP的日志文件是超多的，奈何生产环境又不敢不预留长些的时间），然后重启zookeeper满心欢喜的等待着服务恢复正常。然而这次没有看到成功的提示，异常不断各服务连接zookeeper都失败了。这时真的是郁闷了，空间明明已经是充足的。异常信息如下：&lt;/p></description></item><item><title>离线安装HDP2.6(1)-Ambari Server</title><link>https://lisenhui.cn/tech/offline-install-hdp-ambari-notes.html</link><pubDate>Mon, 17 Apr 2017 19:52:31 +0000</pubDate><guid>https://lisenhui.cn/tech/offline-install-hdp-ambari-notes.html</guid><description>&lt;h2 id="1参考文档">1.参考文档
&lt;a class="header-anchor" href="#1%e5%8f%82%e8%80%83%e6%96%87%e6%a1%a3">&lt;/a>
&lt;/h2>&lt;p>FYI:
&lt;a href="https://docs.hortonworks.com/HDPDocuments/Ambari-2.5.0.3/bk_ambari-installation/content/ch_Getting_Ready.html" title="HDP Install Documents" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
HDP Install Documents
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.0/bk_command-line-installation/content/prepare-environment.html#ref-2822d0e9-bd88-4714-910a-750c5b95a996" title="HDP Install Manual" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
HDP Install Manual
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p></description></item><item><title>Linux使用SSH免密码登录</title><link>https://lisenhui.cn/tech/ssh-login-without-password.html</link><pubDate>Sun, 29 May 2016 12:34:21 +0000</pubDate><guid>https://lisenhui.cn/tech/ssh-login-without-password.html</guid><description>&lt;p>现在分布式集群非常的流行, 经常在不同的机器上面切换来回那是家常便饭. 如果每次切换都需要输入用户名与密码, 那就是要崩溃的节奏啊. 好在&lt;code>SSH-KEY&lt;/code>给我们提供了便利, 只要在&lt;code>master&lt;/code>生成一个&lt;code>PUB_KEY&lt;/code>, 然后拷贝到&lt;code>clusters&lt;/code>中, 以后便可以直接使用&lt;code>ssh hostname&lt;/code>即能快速,方便的切换到需要操作的机器上面.&lt;/p></description></item><item><title>Git 操作命令收集</title><link>https://lisenhui.cn/tech/git-commands-collect.html</link><pubDate>Fri, 29 Jan 2016 12:34:21 +0000</pubDate><guid>https://lisenhui.cn/tech/git-commands-collect.html</guid><description>&lt;p>都说好性不如烂笔头, 一点也没有错呀. 虽然学习Git已经有1个多年头, 但是有些时候那比较少用的命令总是一时想不起来.所以还是决定把它写到blog里面, 不仅把经验分享出去, 而且也便于自己查找, 此博文会持续累加.&lt;/p></description></item><item><title>mpsdk4j的点滴记录--MPAccount</title><link>https://lisenhui.cn/tech/mpsdk4j-intro-mapaccount.html</link><pubDate>Sat, 23 Jan 2016 16:08:32 +0000</pubDate><guid>https://lisenhui.cn/tech/mpsdk4j-intro-mapaccount.html</guid><description>&lt;p>&lt;code>mpsdk4j&lt;/code>是在实际的生产项目中抽离出来的开源分享项目,它的成长至今也算是有不少的经历吧, 最近一直忙于工作与生活上的事情疏忽了对它的关心. 自去年下决心对它重构并建立了QQ交流群(
&lt;a href="http://jq.qq.com/?_wv=1027&amp;amp;k=dPDLxk" title="486192816" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
486192816
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>)后, 逐渐的有不业界朋友前来关注, 在此非常感谢他们的支持. 都说用过方知其好, 可实际情况确不是这么乐观呀,在大家的使用过程中发现&lt;code>mpsdk4j&lt;/code>有不少欠缺与不足的地方. 之前一直想在元旦发布的2.b.1版本也拖延至今还没有交工, 在此对大家说声抱歉, 以后定会嘉勉.下面还是先进入此次的主题&amp;ndash;初识&lt;code>mpsdk4j&lt;/code>之&lt;code>MPAccount&lt;/code>. (注: 对于有微信开发基础与项目经验的可略过)&lt;/p></description></item><item><title>MapDB 同步读写示例</title><link>https://lisenhui.cn/tech/mapdb-write-read-sync.html</link><pubDate>Tue, 19 Jan 2016 21:11:20 +0000</pubDate><guid>https://lisenhui.cn/tech/mapdb-write-read-sync.html</guid><description>&lt;p>MapDB 是一个快速、易用的嵌入式Java数据库引擎. 最主要的特点之一就是支持磁盘存储,直接把内存中的Hash Map同步写入到磁盘. 另外特别惊喜的是它支持ACID事务,MVCC隔离, 且有全职的开发者支持.&lt;/p>
&lt;p>看完官方的文档与示例后,基本上可以确定它符合业务场景的使用要求.另外发现官方正在重构3.x的版本, 但应该不会这么快发布吧.用google搜索了下关于MapDB的使用案例, 也不是很多. 可能是本来官方的文档就齐全有关吧,API也不复杂,跟着官方的文档走一遍就可以上手了.&lt;/p></description></item><item><title>Redis 安装与配置</title><link>https://lisenhui.cn/tech/redis-install-settings.html</link><pubDate>Mon, 29 Jun 2015 12:34:21 +0000</pubDate><guid>https://lisenhui.cn/tech/redis-install-settings.html</guid><description>&lt;p>&lt;code>Redis&lt;/code> 是一款依据&lt;code>BSD&lt;/code>开源协议发行的高性能&lt;code>Key-Value&lt;/code>存储系统（&lt;code>cache and store&lt;/code>）。它通常被称为数据结构服务器，因为值（&lt;code>value&lt;/code>）可以是 字符串(&lt;code>String&lt;/code>), 哈希(&lt;code>Map&lt;/code>), 列表(&lt;code>list&lt;/code>), 集合(&lt;code>sets&lt;/code>) 和 有序集合(&lt;code>sorted sets&lt;/code>)等类型。&lt;code>Redis&lt;/code>的所有数据都是保存在内存中，然后不定期的通过异步方式保存到磁盘上(这称为“半持久化模式”)；也可以把每一次数据变化都写入到一个&lt;code>append only file&lt;/code>(&lt;code>aof&lt;/code>)里面(这称为“全持久化模式”)。
&lt;a href="http://www.redis.cn/topics/introduction.html" title="更多介绍" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
更多介绍
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p></description></item><item><title>Nutz源码Jdoc在IDE中补全提示时出现乱码解决办法</title><link>https://lisenhui.cn/tech/nutz-jdoc-chinese.html</link><pubDate>Fri, 20 Apr 2012 19:11:20 +0000</pubDate><guid>https://lisenhui.cn/tech/nutz-jdoc-chinese.html</guid><description>&lt;p>接触Nutz也有一段时间，随着对它使用的不断深入了解，才越发觉它的强悍与作者的设计巧妙，特别喜欢它那个JUnit测试报告，而且更新的速度也挺快的，到现在的1.b.44版本，ssh所拥有的功能可以说它也已经完全具备了。对于程序员来说学习一种新技术最快捷的办法就是Demo+API，这两样也是必备之需哪。Nutz在这方面做的也是相当的不错，比如在Demo方面有人贡献出了整个CMS的源码(非常感谢作者的分享哪，从里面学习了不少知识)，API方面提供了常见的CHM格式和JAR包。不过这个JAR的API在实现应用中却是出了点小问题，下面就来详细说说。&lt;/p></description></item><item><title>Java程序与RSR232串口通讯小练手</title><link>https://lisenhui.cn/tech/java-hard-rsr232.html</link><pubDate>Sat, 24 Mar 2012 22:21:20 +0000</pubDate><guid>https://lisenhui.cn/tech/java-hard-rsr232.html</guid><description>&lt;p>一直以来都是在学习J2EE方面的应用系统开发，从未想过用JAVA来编写硬件交互程序，不过自己就是喜欢尝试一些未曾接触的新东西。在网上搜索了些资源，了解到JAVA写串口通讯的还是蛮多的，那么便着手准备开发调试环境。软件程序开发环境搭建不成问题，可这硬件环境就有点犯难啦。更何况自己用的是笔记本哪来的串口呀，再说要是真拿这串口硬件来自己也不会弄，随即想到了虚拟机，觉得这东西应该也有虚拟的吧，果真跟自己的猜测一样还真有这东西，顺便也下载了个串口小助手做为调试之用。&lt;/p></description></item><item><title>国内技术强强联手之Nutz+KindEditor+LHGDialog+My97DatePicker</title><link>https://lisenhui.cn/tech/nutz-ke-lhg-my97.html</link><pubDate>Fri, 13 Jan 2012 10:21:20 +0000</pubDate><guid>https://lisenhui.cn/tech/nutz-ke-lhg-my97.html</guid><description>&lt;p>有段时间没关注过国内IT技术发展情况了，前些天在学习国内的一个开源技术&lt;code>Nutz&lt;/code>时想练个手，但一时又不知写些什么好，想了一会还是选择了自己的“老友”&lt;code>KindEditor&lt;/code>。对它虽不敢说是透彻的了解(个人的JS水平有限，呵~)，但至少也能很熟练的运用。官网很早便推出了大家期待已久的&lt;code>KE4&lt;/code>，不过我一起都没有更新，正好这次拿它来历练下，嘻~。可是想到前面写的那些&lt;code>KE&lt;/code>应用示例都是单调的，上次的那个还好有&lt;code>EasyUI&lt;/code>做衬托，不过这个UI框架对于小小于的练手项目来说还是庞大了点。于是又便开始寻思着找别的UI看看，突然间起了以前用过的&lt;code>LHGDialog&lt;/code>弹出窗口组件还蛮不错的，便去它官网逛了一圈。没有想到还真是让人喜出望外呀，&lt;code>LHG&lt;/code>现也更新为4的版本了，那效果的炫丽真是让人颇然心动。下面就先来欣赏下花费2个多小时的劳动成果吧（现在是真相时间），呵呵……&lt;/p></description></item><item><title>IP地址查询Web接口调用</title><link>https://lisenhui.cn/tech/whosip-tool.html</link><pubDate>Fri, 18 Nov 2011 10:21:20 +0000</pubDate><guid>https://lisenhui.cn/tech/whosip-tool.html</guid><description>&lt;p>今天刚好有个站点上要用到一个IP地址显示的功能，随即便想想应该有免费的接口可用吧，百度一下找到了太平洋网站提供的API，那么接下来便是Code Time。&lt;/p>
&lt;p>看完了它的参数说明和调用方式后，选择了其中的jsFunction方式，现在把经验分享出来给大家参考，具体的代码和效果如下：：&lt;/p></description></item><item><title>JSP版本的KindEidtor在线编辑器第二季：Servlet+Struts2集成版</title><link>https://lisenhui.cn/tech/kindeditor-jsp-struts2-servlet.html</link><pubDate>Mon, 17 Oct 2011 22:10:20 +0000</pubDate><guid>https://lisenhui.cn/tech/kindeditor-jsp-struts2-servlet.html</guid><description>&lt;p>前段时间我在论坛上发布了一篇名为
&lt;a href="http://elkan1788.github.io/OnlineEditor/2011-03-24/kindeditor-jsp-complete.html" title="《JSP版的完善KindEditor在线编辑器(带附件上传与图片按日期分类管理功能)》" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
《JSP版的完善KindEditor在线编辑器(带附件上传与图片按日期分类管理功能)》
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>得到了大家的积极响应，不过令我觉得有点遗憾的是，有很多人都不是真的讨论技术问题，而是向我索取源码，说实在的自已的劳动成果就这样白白奉献出来，觉得有点对不起自己了，要知道我们国内的技术员都是没有金钱后盾啊。唉，最近都太忙了就没有怎么太在意这件事，今晚刚好有空过来看看。看了那么多人留下的印记后，觉得自己也应该要无私一下才是吧，咱老毛说的对：要像雷锋同志学习，呵呵…… 其实在上面我已经说过了，这个JAR里面的功能我只是把官网的JSP代码改编而已，废话就先不多说了，下面直接上码吧，可要接稳了哦。&lt;/p></description></item><item><title>MyEclipse6.5+ IDE汉化软件</title><link>https://lisenhui.cn/tech/myeclipse-chinese-tool.html</link><pubDate>Mon, 16 May 2011 13:28:20 +0000</pubDate><guid>https://lisenhui.cn/tech/myeclipse-chinese-tool.html</guid><description>&lt;p>世界上的语言与文字都有千百万种，但始终还是觉得我们的方块汉字比较好看且比较有内涵。而在计算机领域一直都是被国外主宰，所以很多计算机上的程序都是英文版的，有时候用起来还真是不太方便的，于是便出现了一大批汉化版的程序，这些程序都受到了国人的偏爱。&lt;/p></description></item><item><title>开放JSP版KindEditor的附件JAR包源码</title><link>https://lisenhui.cn/tech/kindeditor-jsp-source.html</link><pubDate>Thu, 05 May 2011 09:32:12 +0000</pubDate><guid>https://lisenhui.cn/tech/kindeditor-jsp-source.html</guid><description>&lt;p>3月份的时候写了个JSP版本的kindeditor编辑器的帖子，没有想到大家的响应会这么强烈。不过随着日月的增长，此版本的插件也就暴露出一些BUG，如：Struts2如何集成，web.xml文件中配置上传属性不便修改且繁琐，上传图片(附件)不能保存于其它盘…………。现在平时开发的项目中都是使用KE作为在线编辑器，为了能更好、更方便的使用此编辑器，在休息的时间对原先的代码进行重构再封装，除对上个版本出现的BUG进行外，还统一整体的命名规范，新增了一些功能。&lt;/p></description></item><item><title>JSP版的完善KindEditor在线编辑器(带附件上传与图片按日期分类管理功能)</title><link>https://lisenhui.cn/tech/kindeditor-jsp-complete.html</link><pubDate>Thu, 24 Mar 2011 21:17:53 +0000</pubDate><guid>https://lisenhui.cn/tech/kindeditor-jsp-complete.html</guid><description>&lt;p>在此之前我一直都是在用FCKEditor在线编辑器，当然也有用过其它在线编辑器如eWebEditor,tinyMCE,CuteEditor，jHtmlArea等等，但在最终项目发布的时候并没有采用它们，因为它们要不是皮肤呆板，就是配置太烦琐，或是功能太少、浏览器兼容性不好等等。去年一个偶然的机会让我认识了KindEditor这款在线编辑器，正如它的名字那样这是款友好的编辑器，它不仅体积小配置简单，而且功能与皮肤也是令人相当的振憾。还有个很重要的因素，它是我们国人的开发的免费工具，从产品发布至今更新脚步未曾停止哦。下面就会大家介绍下经过我完善后的KindEditor吧。&lt;/p></description></item><item><title>关于Struts2与Jquery实现无刷新分页的不解问题</title><link>https://lisenhui.cn/tech/jquery-ajax-struts2.html</link><pubDate>Wed, 03 Nov 2010 00:00:00 +0000</pubDate><guid>https://lisenhui.cn/tech/jquery-ajax-struts2.html</guid><description>&lt;p>我最近正在做一个无刷新的网站管理后台，并把它作为我的毕业设计主题，不过在代码实现上遇到了点小问题，想向大家请教一二。我的设计思路大概是这样的：将后台所生成的数据用JSON的格式输出，在前台借助JQUERY的AJAX功能将传过来的数据写出。这样的方式在实现数据的增、改、删功能上并不会很难，不过在数据的查询方面便麻烦了，如何实现数据的无刷新分页呢？我查阅网上一些网友的做法，不过普遍发现他们的代码有点繁琐也不符合我设计初衷。通过查看JQUERY的API我自己想出了一种可行的方案(目前已经实现部分功能)：在查询的页面中先创建一个无数据的表格样式，通过JQUERY的CLONE功 能在查询数据时复制这个表格的样式同时将后台传过的数据填充其中和移除那行无数据的样式表格。&lt;/p></description></item><item><title>JQuery+Strusts1.x实现Ajax无刷新登录</title><link>https://lisenhui.cn/tech/jquery-ajax-struts1.html</link><pubDate>Sun, 05 Sep 2010 10:11:53 +0000</pubDate><guid>https://lisenhui.cn/tech/jquery-ajax-struts1.html</guid><description>&lt;p>在当今技术发展日益成熟，人们除了追求技术创新与发展外，更多也关注到了与用户交互的便利性方面上。当程序员还在为前后数据交互刷新问题困惑时，AJAX 问世了，它以方便快捷的优越性博得了广大程序员的追捧。经过几年的发展，它也渐渐成为我们开发中必不可少的一件利器，下面我就来讲个Struts1 &lt;code>+&lt;/code> Ajax的登录示例。&lt;/p></description></item></channel></rss>