<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on 热爱生活与梦想</title><link>https://lisenhui.cn/tags/github/</link><description>Recent content in GitHub on 热爱生活与梦想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 25 Feb 2021 12:52:25 +0800</lastBuildDate><atom:link href="https://lisenhui.cn/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Github Action自动同步仓库到Gitee</title><link>https://lisenhui.cn/2021/02/25/add-sync-gitee-action.html</link><pubDate>Thu, 25 Feb 2021 12:52:25 +0800</pubDate><guid>https://lisenhui.cn/2021/02/25/add-sync-gitee-action.html</guid><description>&lt;h2 id="1背景">1.背景&lt;/h2>
&lt;p>作为程序员出生的你，肯定知道备份的重要性。再说现在大环境背景下，美国的政治关系还是比较混乱的，而对于存放在Github上面的项目，也不再是技术自由的国度啦。所以说我们的代码还是有必要进行“双”备份的，接下来就是介绍下，如何使用Github上面的Action功能，将Github上面的代码同步备份到国内的Gitee仓库站点。&lt;/p></description></item><item><title>Github个人信息卡片</title><link>https://lisenhui.cn/2021/01/24/github-personal-profile-card.html</link><pubDate>Sun, 24 Jan 2021 12:21:10 +0800</pubDate><guid>https://lisenhui.cn/2021/01/24/github-personal-profile-card.html</guid><description>&lt;p>Github上总是会有一些新奇的东西出现，这不无意间又发现了个有趣的玩法，可以用它来作为你的个人开发者名信片展现。具体展现效果如下：&lt;/p>
&lt;p>&lt;img src="http://myblog.lisenhui.cn/2021/01-24-elkan1788-profile-02.png-alias" alt="01-24-elkan1788-profile-02.png">&lt;/p>
&lt;p>操作起来也不繁琐，类似以前的pages服务那样，只准备个特定的仓库就可以，具体操作如下：&lt;/p></description></item><item><title>使用Github，Travis CI自动布署Hexo博客到Coding，OSChina服务器</title><link>https://lisenhui.cn/2017/08/19/use-travis-ci-push-hexo-blog.html</link><pubDate>Sat, 19 Aug 2017 15:40:26 +0000</pubDate><guid>https://lisenhui.cn/2017/08/19/use-travis-ci-push-hexo-blog.html</guid><description>&lt;p>通常我们都是在本地用&lt;code>hexo deploy&lt;/code>发布博客文章到远程的Pages服务器，可别忘记了我们是还需要提交代码的，所以是不是觉得有点麻烦还得分开两步进行操作。这时突然想起是否可用&lt;code>Travis CI&lt;/code>工具来完成这个布署的操作呢？答案是肯定的，整体的流程大致如下：&lt;/p>
&lt;ul>
&lt;li>在本地(又或者Github网站)上编辑文章&lt;/li>
&lt;li>提交文章到Github服务器&lt;/li>
&lt;li>Travis CI收到通知，同步最新的Github代码，并执行用户自定义好的&lt;code>Travis&lt;/code>脚本生成静态博客&lt;/li>
&lt;li>最终再把生成好的博客推送到指定的Pages服务器&lt;/li>
&lt;/ul>
&lt;p>只是这其中有点比较麻烦的问题就是如何保护我们的私钥，还好&lt;code>Travis CI&lt;/code>已经为我们准备好啦，那么就开始我们的捣腾之旅吧。&lt;/p></description></item><item><title>Github push失败：Could not resolve hostname</title><link>https://lisenhui.cn/2017/05/16/github-push-failed.html</link><pubDate>Tue, 16 May 2017 10:21:43 +0000</pubDate><guid>https://lisenhui.cn/2017/05/16/github-push-failed.html</guid><description>&lt;p>平时最常用的git push命令突然间居然不可以用（错误日志如下），脑子首先蹦出的想法就是：难道Github又被墙了么！以前出现过类似这样的现象，需要通过指定hosts来加速访问。&lt;/p>
&lt;p>git push 执行后返回的错误日志：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-fallback" data-lang="fallback">ssh: Could not resolve hostname github.com:elkan1788: nodename nor servname provided, or not known
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>